//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\ANTLR\Grammars\GStrat.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace EnvironmentCreator.Gammars {
#pragma warning disable 3021
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GStratParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IGStratListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] GStratParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] GStratParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] GStratParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] GStratParser.FunctionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.precondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecondition([NotNull] GStratParser.PreconditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.precondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecondition([NotNull] GStratParser.PreconditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEffect([NotNull] GStratParser.EffectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEffect([NotNull] GStratParser.EffectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] GStratParser.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] GStratParser.RootContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] GStratParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] GStratParser.ActionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstance([NotNull] GStratParser.InstanceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstance([NotNull] GStratParser.InstanceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] GStratParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] GStratParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GStratParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] GStratParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GStratParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] GStratParser.VariableContext context);
}
} // namespace EnvironmentCreator.Gammars
