//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\ANTLR\Grammars\GStrat.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace EnvironmentCreator.Gammars {
#pragma warning disable 3021
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class GStratLexer : Lexer {
	public const int
		T__14=1, T__13=2, T__12=3, T__11=4, T__10=5, T__9=6, T__8=7, T__7=8, T__6=9, 
		T__5=10, T__4=11, T__3=12, T__2=13, T__1=14, T__0=15, OPERATOR_ASSIGN=16, 
		BOOL_ID=17, NUMBER_ID=18, ID=19, INT=20, MUL=21, DIV=22, MOD=23, ADD=24, 
		SUB=25, EQUAL=26, NOT_EQUAL=27, LESS_THEN=28, LESS__OR_EQ=29, MORE_THEN=30, 
		MORE_OR_EQ=31;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"','", "'('", "'{'", "'action'", "'effe'", "'extends'", "'}'", "'effs'", 
		"'pre'", "')'", "'='", "';'", "'duration'", "'type'", "'instance'", "OPERATOR_ASSIGN", 
		"'boolean'", "'number'", "ID", "INT", "'*'", "'/'", "'%'", "'+'", "'-'", 
		"'=='", "'!='", "'<'", "'<='", "'>'", "'>='"
	};
	public static readonly string[] ruleNames = {
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "OPERATOR_ASSIGN", "BOOL_ID", 
		"NUMBER_ID", "ID", "INT", "MUL", "DIV", "MOD", "ADD", "SUB", "EQUAL", 
		"NOT_EQUAL", "LESS_THEN", "LESS__OR_EQ", "MORE_THEN", "MORE_OR_EQ"
	};


	public GStratLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "GStrat.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2!\xC5\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3"+
		"\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x5\x11\x8D\n\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3"+
		"\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3"+
		"\x14\x6\x14\x9F\n\x14\r\x14\xE\x14\xA0\x3\x15\x3\x15\x3\x15\x6\x15\xA6"+
		"\n\x15\r\x15\xE\x15\xA7\x5\x15\xAA\n\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
		"\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3"+
		" \x2\x2\x2!\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?"+
		"\x2!\x3\x2\x5\x6\x2\x30\x30\x43\\\x61\x61\x63|\x3\x2\x32;\x3\x2\x33;\xCB"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2"+
		"\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2"+
		"\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x3\x41\x3\x2\x2"+
		"\x2\x5\x43\x3\x2\x2\x2\a\x45\x3\x2\x2\x2\tG\x3\x2\x2\x2\vN\x3\x2\x2\x2"+
		"\rS\x3\x2\x2\x2\xF[\x3\x2\x2\x2\x11]\x3\x2\x2\x2\x13\x62\x3\x2\x2\x2\x15"+
		"\x66\x3\x2\x2\x2\x17h\x3\x2\x2\x2\x19j\x3\x2\x2\x2\x1Bl\x3\x2\x2\x2\x1D"+
		"u\x3\x2\x2\x2\x1Fz\x3\x2\x2\x2!\x8C\x3\x2\x2\x2#\x8E\x3\x2\x2\x2%\x96"+
		"\x3\x2\x2\x2\'\x9E\x3\x2\x2\x2)\xA9\x3\x2\x2\x2+\xAB\x3\x2\x2\x2-\xAD"+
		"\x3\x2\x2\x2/\xAF\x3\x2\x2\x2\x31\xB1\x3\x2\x2\x2\x33\xB3\x3\x2\x2\x2"+
		"\x35\xB5\x3\x2\x2\x2\x37\xB8\x3\x2\x2\x2\x39\xBB\x3\x2\x2\x2;\xBD\x3\x2"+
		"\x2\x2=\xC0\x3\x2\x2\x2?\xC2\x3\x2\x2\x2\x41\x42\a.\x2\x2\x42\x4\x3\x2"+
		"\x2\x2\x43\x44\a*\x2\x2\x44\x6\x3\x2\x2\x2\x45\x46\a}\x2\x2\x46\b\x3\x2"+
		"\x2\x2GH\a\x63\x2\x2HI\a\x65\x2\x2IJ\av\x2\x2JK\ak\x2\x2KL\aq\x2\x2LM"+
		"\ap\x2\x2M\n\x3\x2\x2\x2NO\ag\x2\x2OP\ah\x2\x2PQ\ah\x2\x2QR\ag\x2\x2R"+
		"\f\x3\x2\x2\x2ST\ag\x2\x2TU\az\x2\x2UV\av\x2\x2VW\ag\x2\x2WX\ap\x2\x2"+
		"XY\a\x66\x2\x2YZ\au\x2\x2Z\xE\x3\x2\x2\x2[\\\a\x7F\x2\x2\\\x10\x3\x2\x2"+
		"\x2]^\ag\x2\x2^_\ah\x2\x2_`\ah\x2\x2`\x61\au\x2\x2\x61\x12\x3\x2\x2\x2"+
		"\x62\x63\ar\x2\x2\x63\x64\at\x2\x2\x64\x65\ag\x2\x2\x65\x14\x3\x2\x2\x2"+
		"\x66g\a+\x2\x2g\x16\x3\x2\x2\x2hi\a?\x2\x2i\x18\x3\x2\x2\x2jk\a=\x2\x2"+
		"k\x1A\x3\x2\x2\x2lm\a\x66\x2\x2mn\aw\x2\x2no\at\x2\x2op\a\x63\x2\x2pq"+
		"\av\x2\x2qr\ak\x2\x2rs\aq\x2\x2st\ap\x2\x2t\x1C\x3\x2\x2\x2uv\av\x2\x2"+
		"vw\a{\x2\x2wx\ar\x2\x2xy\ag\x2\x2y\x1E\x3\x2\x2\x2z{\ak\x2\x2{|\ap\x2"+
		"\x2|}\au\x2\x2}~\av\x2\x2~\x7F\a\x63\x2\x2\x7F\x80\ap\x2\x2\x80\x81\a"+
		"\x65\x2\x2\x81\x82\ag\x2\x2\x82 \x3\x2\x2\x2\x83\x8D\a?\x2\x2\x84\x85"+
		"\a/\x2\x2\x85\x8D\a?\x2\x2\x86\x87\a-\x2\x2\x87\x8D\a?\x2\x2\x88\x89\a"+
		"\x31\x2\x2\x89\x8D\a?\x2\x2\x8A\x8B\a,\x2\x2\x8B\x8D\a?\x2\x2\x8C\x83"+
		"\x3\x2\x2\x2\x8C\x84\x3\x2\x2\x2\x8C\x86\x3\x2\x2\x2\x8C\x88\x3\x2\x2"+
		"\x2\x8C\x8A\x3\x2\x2\x2\x8D\"\x3\x2\x2\x2\x8E\x8F\a\x64\x2\x2\x8F\x90"+
		"\aq\x2\x2\x90\x91\aq\x2\x2\x91\x92\an\x2\x2\x92\x93\ag\x2\x2\x93\x94\a"+
		"\x63\x2\x2\x94\x95\ap\x2\x2\x95$\x3\x2\x2\x2\x96\x97\ap\x2\x2\x97\x98"+
		"\aw\x2\x2\x98\x99\ao\x2\x2\x99\x9A\a\x64\x2\x2\x9A\x9B\ag\x2\x2\x9B\x9C"+
		"\at\x2\x2\x9C&\x3\x2\x2\x2\x9D\x9F\t\x2\x2\x2\x9E\x9D\x3\x2\x2\x2\x9F"+
		"\xA0\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA0\xA1\x3\x2\x2\x2\xA1(\x3\x2\x2"+
		"\x2\xA2\xAA\t\x3\x2\x2\xA3\xA5\t\x4\x2\x2\xA4\xA6\t\x3\x2\x2\xA5\xA4\x3"+
		"\x2\x2\x2\xA6\xA7\x3\x2\x2\x2\xA7\xA5\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2"+
		"\xA8\xAA\x3\x2\x2\x2\xA9\xA2\x3\x2\x2\x2\xA9\xA3\x3\x2\x2\x2\xAA*\x3\x2"+
		"\x2\x2\xAB\xAC\a,\x2\x2\xAC,\x3\x2\x2\x2\xAD\xAE\a\x31\x2\x2\xAE.\x3\x2"+
		"\x2\x2\xAF\xB0\a\'\x2\x2\xB0\x30\x3\x2\x2\x2\xB1\xB2\a-\x2\x2\xB2\x32"+
		"\x3\x2\x2\x2\xB3\xB4\a/\x2\x2\xB4\x34\x3\x2\x2\x2\xB5\xB6\a?\x2\x2\xB6"+
		"\xB7\a?\x2\x2\xB7\x36\x3\x2\x2\x2\xB8\xB9\a#\x2\x2\xB9\xBA\a?\x2\x2\xBA"+
		"\x38\x3\x2\x2\x2\xBB\xBC\a>\x2\x2\xBC:\x3\x2\x2\x2\xBD\xBE\a>\x2\x2\xBE"+
		"\xBF\a?\x2\x2\xBF<\x3\x2\x2\x2\xC0\xC1\a@\x2\x2\xC1>\x3\x2\x2\x2\xC2\xC3"+
		"\a@\x2\x2\xC3\xC4\a?\x2\x2\xC4@\x3\x2\x2\x2\a\x2\x8C\xA0\xA7\xA9\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace EnvironmentCreator.Gammars
